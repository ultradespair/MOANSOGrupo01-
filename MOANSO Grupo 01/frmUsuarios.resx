<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>