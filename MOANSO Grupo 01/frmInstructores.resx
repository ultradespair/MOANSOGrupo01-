<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="btnBuscarInstructor.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABgAAAAYCAYAAADgdz34AAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAA
        rQAAAK0BVE7WMAAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAFNSURBVEhLxZVJ
        SgRBEEVLQb2DulG3Dn0DLyE44lrEje71HvYpnPaCw0bRSziAR3AAfY/KBNGGimzK9sMjg86uiMwYqqr/
        0DCswSk8w2taT2AF3O9b03APF7AM4zAKE6DzS7iDKSiWzp9gK9ldeIC3tB6CjrfhMdlheW1PrvNFeIF9
        mIGRtB6Av7tvkFsIp8ucmxY1B/O1+UsL4L66AtMY0hmE/5zkoY5rs1l2iQUtkYW3ZiHZinZLicbA50Lq
        5waT4HMh5SEq0Toc1Waz8hBFNQTXEG4M+9kJtb8j2oEbKHptOJl2RVMQnb/DJjiEsxCWQZxQh2gVLKTd
        5WrfmxZPrnOn+hwMVjRDXtuaOETeKL9NLaiO3PfkOv9MFAdpkmnRaQ7wJ0GW4GeQD9iA1jSQIKalV7o6
        0Jp6BdmDVvU9iF/BVm+QpdPdtA5CVfUFH/1bKYcJT8EAAAAASUVORK5CYII=
</value>
  </data>
</root>