<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABDCAYAAAAs/QNwAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAALxsAAC8bASCmZ84AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAAHeUlEQVR4Xu2cdagtVRSHr12o2IH5FAsTFQMbEREDW7EbUVQUxMYuVESMP8ynqFh/qKjYYmFhd3d3
        t/6+fc46b5/99p7Zc++Z8+Yezg8+7uyZNXHWzOxYe80dKdEd4kUxrSvFtaj4QZzvSmntL/4QG7hSWjeK
        18SMrhTXvOITcYEr1ajvxX+CE6a0kcDmYVdK62KB3SGulNYXArvFXCmuNQU2z7tSj7WcOEpcJf4UnOhW
        wZ2J8ZDA5itvXYy3BXbPeeti/C6w4+mLbYf7BTbficvEYaLIYVmaR9ws/hUcfLzxl7hEzCwqayHxruBA
        vwi8uk97mXW8v9snOEFg84a3LgZ3FLurvXUxvhbY8arEtsORApuPBdd2nbCn9Wkxq8jW1OJJwc7PiIWF
        6RvBep6OlNYW2JTVAecI7A51pbTeE9hNcKW4VhDYvORKLfHqvilYz2uSrZ0FO1Grzs0KT7uLI1qLSU0n
        qDNwRJGWEDwtRRUq2kEcL7gxKU0jThKbu9IkLS5+FPyetViRI3s0D3al8a8zBL/nIlfK0OeCHYoeufGk
        dQS/h9c6S/8IdqB5og4Y77ws+D3viyxhPIh8KLJkO2wqNh4A9hajcgC1+SBoWTF0gBg6wJUyVIcDGJgw
        YInV0iG3idmEr6NFzDaEpm4X4asRDthL2HFzCGMEH4mYXYx7ha9GOMBq4gdErKY2XhHYbSh8Mchh/a4i
        th8cJ7C5T/hqlAMYpRXpcYFdygH07VPaQmAzdIArTdLQAYL1Qwe4UoYwhqEDXKk3Mgd8IPxgZoiFv1IO
        KAqMPiqwaaQDthV23BxWEb5eFTG7GLcIX41wAOGsbQQByzI2EaGWFPuKmL0PHa75hK9GOGBKaugAMXSA
        GLMDaMJsWxlnC1+rip9FzDbkS7Gg8HWTiNnGOFn46pkDbIIiB5okX9YM5pJqBnM4VfjquQOYcUmJC8cm
        5YDRdoTs3EzZVdVAOGAzcWBrsUuzCKbGmRFiRmvLdnkRMZVAA+EAXyuJ0wXxfpvDiPGZmCiIJlEe9w5Y
        X9DNZbsPOQEWSPmpvWwzwz7kK8wpSmU7NMUBzERfI1gP3PV7BI+8tRZrCLa94Eqta19RnCiYEbJ9aWGY
        4C2UGTfBAYwJGECxzthNhGKmGcfc7Urdohv+iPCPcYVI5hyZUcoBBCjfSfCpwCblAB7R2H7GbwI7HEBg
        1BIySNYgRYdlu8uhlhGztxa7ZPkKHPss8Xe7TPA0mj3CRggdwGNn28rAw774MUUVlg8XupOweX3C6XMJ
        LvZ1QZZaFZG0RbrMMa7UalEs2esuQW5Bl+xCQgdQZsq8DIIWkx1UYpQWsw9h5EeNzTVwl/yUPI4bO3aZ
        Zmj/NdEztacr7LUmHdAvEdzg/G+JrFq7rarXy1NGAhhPJjkEHU1JB1glCiRa5l7DAoLH+kpXyhNPKvUO
        56JP0UnBSTmACoZHJ4dY5UKPLLRbXvh6Qtj5ITero2qi5HrCKlxjR+FkK0IHPCb8HYq4Qfgi1yBmB3Zi
        HEKZ9Nk9BBleVHjWpS1SVQdQKf8qaJbPE+yL853swkIHWDPI4xKbmARyA7FJNYOk2fn2ONX6FeT5YhPG
        9HyR7zdTa7FLo0mVNcfy+tBKUB/Qn3AHgpQD6uoImfMY0MRE7U/qHr25A9pl02gc4OtOwf4ub5kF6KcD
        5hd23lhnBnHH6OmZHR0i2ng0VgdYpql7de0E/XTAuoLt9DLLxASI37+/XZATwPJoHcBwmv1dpqkduJ8O
        sB9AXi+VoZ+eGxNxgFMEFRn7WUJ3VQfQyWJ4vbVg/2+FW4B+OoBEbDsvMJwtykc2kXnixwvJbayiY4V/
        XlqgTiHlAN63ORLY/FzKAaTf+/ZWEzPpwXbG9rQOTIFNL3JFrICxStnHF6GYhHlKUJ9wfvoGbgFSDsgh
        dEAqReZCgaj5KXfa4j5rdcH5Cb6694ACNbMv2mm2lcEEp428TPT4qLhCO2pfxHvIOfnWKKfj02vR8eL8
        7sZZj6/TNeyDeNpsdMZHV/2WfbvgPro6vF2gRq3yHo5VFu/je59+iifOBkXbsYImxiYirhfhWLou0bvj
        nFaT0zfoGqb2UITDyDjjgxAqUM5LtIrf7kQYyUZLDEoOEiuLWACjVxD/s2jug+2/vBZ11An7CY5Pq4PD
        WQ6jWC7SWqXm7zXMJdb1OhCd8kN8xAmXFpOJxx9vMVggQuPX4nXByIyLopNSpxhV2rt/KSuaIsLeXBSO
        oGdZh3itrhWch0g2nbJGiSktLo7ZHD6JMxHICPOIy8SdpidqX6fx408THJ+uL9Ghxonml4gwF0ntTH4R
        YxAqSTpLVcRMEMfhnSdUR8tGmWDonqKxokliqMvFMtqzIfDlIhSjOvICiPmHYlBl8wBWqfN60Qw2XkR9
        zhT+pAoxvDBPYDXBNgZSvoj0EjSxwQ7Qx6mrf1Gb6BQ9K+xH2DwgU99bCWL8rCefkIENg69zhd+M09Tx
        8WSVuYZGibvJZ7R8nl/li3bqEL4iX0oMjAiE0HVm2pwoEq0FfQjmE5lIZT6RAQ7xiaL/PBFoZOR/x+Oi
        jPYWTA4AAAAASUVORK5CYII=
</value>
  </data>
</root>