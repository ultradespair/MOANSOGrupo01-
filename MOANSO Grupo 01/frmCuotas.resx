<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>